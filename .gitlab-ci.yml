stages:
    - Build app
    - Pipeline Scan
    - Agent-based SCA
    - Upload and Scan SAST, SCA (Policy or Sandbox)
    - SBOM generation

Compile Application:
    image: maven:3.6.0-jdk-8
    stage: Build app
    script:
      - mvn clean package
    artifacts:
      name: verademo-gitlab
      paths:
        - target/
      expire_in: 5 week
    cache:
      paths:
        - target/
        - .m2/repository

Pipeline Scan SAST (Summary info):
    image: veracode/pipeline-scan:latest
    stage: Pipeline Scan
    needs:
        - Compile Application
    script:
        - java -jar /opt/veracode/pipeline-scan.jar -vid ${VERACODE_API_ID} -vkey ${VERACODE_API_KEY} --file target/verademo.war || true 
    artifacts:
        paths:
            - results.json
        when: always
        name: "veracode-pipeline-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
    allow_failure: true

Pipeline Scan SAST (Detailed info):
    image: veracode/pipeline-scan:latest
    stage: Pipeline Scan
    needs:
        - Compile Application
    script:
        - java -jar /opt/veracode/pipeline-scan.jar -vid ${VERACODE_API_ID} -vkey ${VERACODE_API_KEY} --request_policy "Nickpolicy" 2>&1 | tee pipeline_scan_policy_output.txt
        - java -jar /opt/veracode/pipeline-scan.jar -vid ${VERACODE_API_ID} -vkey ${VERACODE_API_KEY} --file target/verademo.war --issue_details true || true
            --policy_file Nickpolicy.json 
            --gl_issue_generation true
            --gl_vulnerability_generation true
            -fjf filtered_results.json 2>&1 | tee pipeline_scan_text_output.txt
    artifacts:
        reports:   
            sast: veracode_gitlab_vulnerabilities.json  
        paths:
            - results.json
            - filtered_results.json
            - pipeline_scan_text_output.txt
        when: always
        name: "veracode-pipeline-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
    allow_failure: true

Agent-based SCA Summary:
    image: maven:3.6.0-jdk-8
    stage: Agent-based SCA
    script:
        - curl -sSL https://download.sourceclear.com/ci.sh | bash -s scan . --allow-dirty
    allow_failure: true

Agent-based SCA Detailed:
    image: maven:3.6.0-jdk-8
    stage: Agent-based SCA
    script:
        - curl -sSL https://download.sourceclear.com/ci.sh | bash -s scan . --json scaResults.json --allow-dirty --scan-collectors maven 2>&1 | tee sca_output.txt
    allow_failure: true

Upload and Scan SAST, SCA (Policy or Sandbox):
    image: veracode/api-wrapper-java
    stage: Upload and Scan SAST, SCA (Policy or Sandbox)
    needs:
        - Compile Application
    script:
        - java -jar /opt/veracode/api-wrapper.jar 
            -vid ${VERACODE_API_ID} 
            -vkey ${VERACODE_API_KEY}
            -action UploadAndScan 
            -appname "verademo-gitlab" 
            -createprofile true 
            -autoscan true
            -filepath ./target/verademo.war 
            -version "Job ${CI_JOB_ID} in pipeline ${CI_PIPELINE_ID}" 
            -scantimeout 15 2>&1 | tee policy_scan_output.txt
    artifacts:
        paths:
        - policy_scan_output.txt
        when: always
        name: "veracode-POLICY-SCAN-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
    allow_failure: true

SBOM generation from Policy Scan:
    image: python:latest
    stage: SBOM generation
    needs:
        - Upload and Scan SAST, SCA (Policy or Sandbox)
    before_script:
      - pip install httpie
      - pip install veracode_api_signing
      - apt update
      - apt install -y jq
      - mkdir -p ~/.veracode/
      - |
        cat > ~/.veracode/credentials << EOF
        [default]
        veracode_api_key_id = ${VERACODE_API_ID}
        veracode_api_key_secret = ${VERACODE_API_KEY}
        EOF
    script:
      - GUID=$(http --auth-type=veracode_hmac GET https://api.veracode.com/appsec/v1/applications?name=verademo-gitlab | jq -r '._embedded.applications[0].guid')
      - echo $GUID
      - http --auth-type=veracode_hmac GET https://api.veracode.com/srcclr/sbom/v1/targets/$GUID/cyclonedx?type=application > verademo-gitlab_sbom.json
    artifacts:
      paths:
        - verademo-gitlab_sbom.json
      expire_in: 1 week


# Sandbox Scan SAST, SCA:
#     image: veracode/api-wrapper-java
#     stage: Upload & Scan SAST-SCA (Sandbox)
#     only:
#         - schedules
#     script:
#         - java -jar /opt/veracode/api-wrapper.jar -vid ${VERACODE_API_ID} -vkey ${VERACODE_API_KEY}
#           -action UploadAndScan 
#           -appname "verademo-gitlab"
#           -createprofile true
#           -autoscan true
#           -sandboxname "gitlab-feature-branch" 
#           -createsandbox true
#           -filepath ./target/verademo.war 
#           -version "Job ${CI_JOB_ID} in pipeline ${CI_PIPELINE_ID}" 
#           -scantimeout 15 2>&1 | tee policy_scan_output.txt
#     artifacts:
#         paths:
#             - policy_scan_output.txt
#         when: always
#         name: "veracode-POLICY-SCAN-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
#     allow_failure: true